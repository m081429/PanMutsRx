#! /usr/bin/env bash
#trap "exit 100; exit" ERR
####################
## Script Options ##
####################

#set -x

usage ()
{
cat << EOF
######################################################################
##      script to run varscan single sample mode
## Script Options:
##      -c      <configfile>      -       (REQUIRED)      required config file
##      -f      <BamfilePath>      -       (REQUIRED)      required file with fullpath to Bamfiles(each line should contain <BAMFILE>)
##      -r      <rundir>      -       (REQUIRED)      rundir
##      -e      <email>      -       (REQUIRED)      email
##      -i      <runid>      -       (REQUIRED)      runid
##      -h      - Display this usage/help text (No arg)
#############################################################################
EOF
}
echo "Options specified: $@"

while getopts "c:f:r:e:i:h" OPTION; do
    case $OPTION in
        c) config=$OPTARG ;;
		f) fastq=$OPTARG ;;
		r) rundir=$OPTARG ;;
        e) EMAIL=$OPTARG ;;
		i) RUNID=$OPTARG ;;
        h) usage
		exit ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$config" ] || [ -z "$fastq" ] || [ -z "$rundir" ] || [ -z "$EMAIL" ] || [ -z "$RUNID" ]; then
    usage
fi

#loading the config file
source $config
source $WORKFLOW_PATH/shared_functions.sh
if [ -z $SGE_TASK_ID ]
then
	SGE_TASK_ID=1
fi

sampname=`cat $fastq|head -$SGE_TASK_ID|tail -1|sed -e 's/\t/ /g'`
START=$(date +%s)
mkdir -p $rundir
cd $rundir
k3=$rundir
normal_pileup="$SAMTOOLS mpileup -q 20 -f $REF_GENOME $sampname";
varscanOut=`basename $sampname|sed -s 's/.bam/.varscan.snp/g'`
echo "$JAVA -Djava.io.tmpdir=$k3  $GATK_JAVA_OPTION -jar $VARSCAN pileup2snp  <($normal_pileup)  > $varscanOut"
bash -c "$JAVA -Djava.io.tmpdir=$k3  $GATK_JAVA_OPTION -jar $VARSCAN pileup2snp  <($normal_pileup)  > $varscanOut"
check_variable $? $0 $sampname "Varscan Single Sample SNP Caller step" $EMAIL $RUNID
varscanFilOut=`echo $varscanOut|sed -s 's/.varscan.snp/.varscan.snp.filter/g'`
$JAVA -Djava.io.tmpdir=$k3  $GATK_JAVA_OPTION -jar $VARSCAN filter $varscanOut  $VARSCAN_FILTER_OPTIONS > $varscanFilOut
check_variable $? $0 $sampname "Varscan Single Sample SNP Filtering step" $EMAIL $RUNID
delscanOut=`basename $sampname|sed -s 's/.bam/.varscan.indel/g'`
bash -c "$JAVA -Djava.io.tmpdir=$k3  $GATK_JAVA_OPTION -jar $VARSCAN pileup2indel  <($normal_pileup)  > $delscanOut"
check_variable $? $0 $sampname "Varscan Single Sample INDEL Caller step" $EMAIL $RUNID
delscanFilOut=`echo $delscanOut|sed -s 's/.varscan.indel/.varscan.indel.filter/g'`
$JAVA -Djava.io.tmpdir=$k3  $GATK_JAVA_OPTION -jar $VARSCAN filter $delscanOut  $VARSCAN_FILTER_OPTIONS > $delscanFilOut
check_variable $? $0 $sampname "Varscan Single Sample INDEL Filtering step" $EMAIL $RUNID

END=$(date +%s)
DIFF=$(( $END - $START ))
echo "Varscan Single Sample Caller  for $sampname took $DIFF seconds"
